// Code generated by "stringer -type=hsiResult,hsiLevel -output hsi_generated.go -linecomment"; DO NOT EDIT.

package system

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ResultUnknown-0]
	_ = x[ResultEnabled-1]
	_ = x[ResultNotEnabled-2]
	_ = x[ResultValid-3]
	_ = x[ResultNotValid-4]
	_ = x[ResultLocked-5]
	_ = x[ResultNotLocked-6]
	_ = x[ResultEncrypted-7]
	_ = x[ResultNotEncrypted-8]
	_ = x[ResultTainted-9]
	_ = x[ResultNotTainted-10]
	_ = x[ResultFound-11]
	_ = x[ResultNotFound-12]
	_ = x[ResultSupported-13]
	_ = x[ResultNotSupported-14]
}

const _hsiResult_name = "Not KnownEnabledNot EnabledValidNot ValidLockedNot LockedEncryptedNot EncryptedTaintedNot TaintedFoundNot FoundSupportedNot Supported"

var _hsiResult_index = [...]uint8{0, 9, 16, 27, 32, 41, 47, 57, 66, 79, 86, 97, 102, 111, 120, 133}

func (i hsiResult) String() string {
	if i >= hsiResult(len(_hsiResult_index)-1) {
		return "hsiResult(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _hsiResult_name[_hsiResult_index[i]:_hsiResult_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[hsi0-0]
	_ = x[hsi1-1]
	_ = x[hsi2-2]
	_ = x[hsi3-3]
	_ = x[hsi4-4]
	_ = x[hsi5-5]
}

const _hsiLevel_name = "HSI:0 (Insecure State)HSI:1 (Critical State)HSI:2 (Risky State)HSI:3 (Protected State)HSI:4 (Secure State)HSI:5 (Secure Proven State)"

var _hsiLevel_index = [...]uint8{0, 22, 44, 63, 86, 106, 133}

func (i hsiLevel) String() string {
	if i >= hsiLevel(len(_hsiLevel_index)-1) {
		return "hsiLevel(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _hsiLevel_name[_hsiLevel_index[i]:_hsiLevel_index[i+1]]
}
