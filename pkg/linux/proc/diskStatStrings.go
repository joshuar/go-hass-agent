// Code generated by "stringer -type=DiskStat -output diskStatStrings.go -linecomment"; DO NOT EDIT.

package diskstats

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TotalReads-3]
	_ = x[TotalReadsMerged-4]
	_ = x[TotalSectorsRead-5]
	_ = x[TotalTimeReading-6]
	_ = x[TotalWrites-7]
	_ = x[TotalWritesMerged-8]
	_ = x[TotalSectorsWritten-9]
	_ = x[TotalTimeWriting-10]
	_ = x[ActiveIOs-11]
	_ = x[ActiveIOTime-12]
	_ = x[ActiveIOTimeWeighted-13]
	_ = x[TotalDiscardsCompleted-14]
	_ = x[TotalDiscardsMerged-15]
	_ = x[TotalSectorsDiscarded-16]
	_ = x[TotalTimeDiscarding-17]
	_ = x[TotalFlushRequests-18]
	_ = x[TotalTimeFlushing-19]
}

const _DiskStat_name = "Total reads completedTotal reads mergedTotal sectors readTotal milliseconds spent readingTotal writes completedTotal writes mergedTotal sectors writtenTotal milliseconds spent writingI/Os currently in progressMilliseconds elapsed spent doing I/OsMilliseconds elapsed spent doing I/Os (weighted)Total discards completedTotal discards mergedTotal sectors discardedTotal milliseconds spent discardingTotal flush requests completedTotal milliseconds spent flushing"

var _DiskStat_index = [...]uint16{0, 21, 39, 57, 89, 111, 130, 151, 183, 209, 246, 294, 318, 339, 362, 397, 427, 460}

func (i DiskStat) String() string {
	i -= 3
	if i < 0 || i >= DiskStat(len(_DiskStat_index)-1) {
		return "DiskStat(" + strconv.FormatInt(int64(i+3), 10) + ")"
	}
	return _DiskStat_name[_DiskStat_index[i]:_DiskStat_index[i+1]]
}
