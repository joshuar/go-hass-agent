---
# Copyright 2025 Joshua Rich <joshua.rich@gmail.com>.
# SPDX-License-Identifier: MIT

components:
  schemas:
    # Entity Keys:
    UniqueID:
      description: is a unique identifier for a entity.
      type: string
      x-go-name: UniqueID
    Name:
      description: is a human-friendly name for a entity.
      type: string
    State:
      description: is the current state of the entity.
      type: string
    SensorType:
      description: is the type of sensor entity.
      type: string
      enum:
        - "sensor"
        - "binary_sensor"
    Attributes:
      description: >
        defines additional custom attributes of a sensor, as key-value pairs, to
        add to the entity.
      type: object
      additionalProperties: true
      nullable: true
    Icon:
      description: >
        is a material design icon to represent the entity. Must be prefixed
        mdi:. If not provided, default value is mdi:cellphone.
      type: string
      nullable: true
    Units:
      description: is the unit of measurement for the entity.
      type: string
      nullable: true
    EntityCategory:
      description: is the entity category of the entity.
      type: string
      enum:
        - "diagnostic"
      nullable: true
    # Entities and Objects:
    Event:
      descripton: describes an event to fire in Home Assistant.
      type: object
      required:
        - event_type
        - event_data
      properties:
        event_type:
          description: is the ype of the event to fire.
          type: string
        event_data:
          description: is data of the event to fire
          type: object
          additionalProperties: true
    Location:
      description: defines location details of the device.
      type: object
      properties:
        location_name:
          desscription: >
            is the name of the zone the device is in.
          type: string
        gps:
          description: >
            is the current location as latitude and longitude.
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2
        gps_accuracy:
          description: >
            defines GPS accuracy in meters. Must be greater than 0.
          type: integer
          minimum: 0
        battery:
          description: >
            is the percentage of battery the device has left. Must be greater than 0.
          type: integer
          minimum: 0
        speed:
          description: >
            is the speed of the device in meters per second. Must be greater than 0.
          type: integer
          minimum: 0
        altitude:
          description: >
            is the altitude of the device in meters. Must be greater than 0.
          type: integer
          minimum: 0
        course:
          description: >
            is the direction in which the device is traveling, measured in degrees
            and relative to due north. Must be greater than 0.
          type: integer
          minimum: 0
        vertical_accuracy:
          description: >
            is the accuracy of the altitude value, measured in meters. Must be
            greater than 0.
          type: integer
          minimum: 0
    SensorState:
      description: defines the current state of a sensor.
      type: object
      required:
        - unique_id
        - type
        - state
      properties:
        unique_id:
          $ref: '#/components/schemas/UniqueID'
        attributes:
          $ref: '#/components/schemas/Attributes'
        icon:
          $ref: '#/components/schemas/Icon'
        type:
          $ref: '#/components/schemas/SensorType'
        state:
          $ref: '#/components/schemas/State'
    SensorRegistration:
      description: defines a sensor to be registered with Home Assistant.
      allOf:
        - $ref: '#/components/schemas/SensorState'
        - type: object
          required:
            - name
          properties:
            name:
              $ref: '#/components/schemas/Name'
            unit_of_measurement:
              $ref: '#/components/schemas/Units'
            entity_category:
              $ref: '#/components/schemas/EntityCategory'
            disabled:
              description: >
                indicates if the entity should be enabled or disabled.
              type: boolean
            device_class:
              description: is a valid Binary Sensor or Sensor device class.
              x-go-type: 'sensor.DeviceClass'
              x-go-type-import:
                path: 'github.com/joshuar/go-hass-agent/internal/models/sensor'
            state_class:
              description: is the state class of the entity (sensors only).
              x-go-type: 'sensor.StateClass'
              x-go-type-import:
                path: 'github.com/joshuar/go-hass-agent/internal/models/sensor'
    Sensor:
      description: contains details about an individual sensor.
      allOf:
        - $ref: '#/components/schemas/SensorState'
        - $ref: '#/components/schemas/SensorRegistration'
    # API Objects:
    APIDeviceRegistrationRequest:
      description: >
        defines the registration details for the device running the agent.
      type: object
      required:
        - device_id
        - app_id
        - app_name
        - app_version
        - device_name
        - manufacturer
        - model
        - os_name
        - os_version
        - supports_encryption
      properties:
        device_id:
          description: is a unique identifier for this device.
          type: string
        device_name:
          description: is the name for this device.
          type: string
        manufacturer:
          description: is the manufacturer of the device running the app.
          type: string
        model:
          description: is the model of the device running the app.
          type: string
        app_id:
          description: is a unique identifier for this app.
          type: string
        app_name:
          description: is the name of the mobile app.
          type: string
        app_version:
          description: is the version of the mobile app.
          type: string
        os_name:
          description: is the name of the OS running the app.
          type: string
        os_version:
          description: is the OS version of the device running the app.
          type: string
        supports_encryption:
          description: indicates if the app supports encryption.
          type: boolean
        app_data:
          description: >
            Contains app data can be used if the app has a supporting component
            that extends mobile_app functionality.
          type: object
    APIDeviceRegistrationResponse:
      description: >
        defines the reponse for a device registration from Home Assistant.
        Contains URLs to use for connecting to Home Assistant.
      type: object
      required:
        - webhook_id
      properties:
        cloudhook_url:
          description: >
            is the cloudhook URL provided by Home Assistant Cloud. Only will be
            provided if user is actively subscribed to Nabu Casa.
          type: string
        remote_ui_url:
          description: >
            is the remote UI URL provided by Home Assistant Cloud. Only will be
            provided if user is actively subscribed to Nabu Casa.
          type: string
        secret:
          description: >
            is the secret to use for encrypted communication. Will only be
            included if encryption is supported by both the app and the Home
            Assistant instance. More info.
          type: string
        webhook_id:
          description: is the webhook ID that can be used to send data back.
          type: string
    APIError:
      description: defines an error status returned by the API.
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    APIRequest:
      description: defines a request sent through the API.
      type: object
      required:
        - type
      properties:
        type:
          description: is the type of request.
          type: string
          enum:
            - "encrypted"
            - "register_sensor"
            - "update_sensor_states"
            - "update_location"
            - "fire_event"
            - "get_config"
        data:
          description: is the request payload.
          oneOf:
            - $ref: '#/components/schemas/Location'
            - $ref: '#/components/schemas/SensorState'
            - $ref: '#/components/schemas/SensorRegistration'
            - $ref: '#/components/schemas/Event'
        encrypted:
          description: indicates the request payload is encrypted.
          type: boolean
        retryable:
          description: indicates whether the request can be retried.
          type: boolean
          x-go-json-ignore: true
    APIResponse:
      description: defines a response received through the API.
      oneOf:
        - $ref: '#/components/schemas/APISensorStateResponse'
        - $ref: '#/components/schemas/APISensorRegistrationResponse'
    APISensorStateResponse:
      description: >
        contains a map of response status for each sensor state sent.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/APISensorStateResponseStatus'
    APISensorStateResponseStatus:
      description: >
        contains the response status for an individual sensor.
      type: object
      properties:
        success:
          description: indicates if the sensor state update was successful.
          type: boolean
        is_disabled:
          description: indicates the sensor has been disabled in Home Assistant.
          type: boolean
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/APIError'
    APISensorRegistrationResponse:
      description: >
        contains a map of response status for sensor registration.
      type: object
      properties:
        success:
          description: indicates if the sensor registration was successful.
          type: boolean
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/APIError'
