// Code generated by mockery v2.30.16. DO NOT EDIT.

package hass

import (
	bytes "bytes"
	json "encoding/json"

	mock "github.com/stretchr/testify/mock"
)

// MockRequest is an autogenerated mock type for the Request type
type MockRequest struct {
	mock.Mock
}

// RequestData provides a mock function with given fields:
func (_m *MockRequest) RequestData() json.RawMessage {
	ret := _m.Called()

	var r0 json.RawMessage
	if rf, ok := ret.Get(0).(func() json.RawMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(json.RawMessage)
		}
	}

	return r0
}

// RequestType provides a mock function with given fields:
func (_m *MockRequest) RequestType() RequestType {
	ret := _m.Called()

	var r0 RequestType
	if rf, ok := ret.Get(0).(func() RequestType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(RequestType)
	}

	return r0
}

// ResponseHandler provides a mock function with given fields: _a0
func (_m *MockRequest) ResponseHandler(_a0 bytes.Buffer) {
	_m.Called(_a0)
}

// NewMockRequest creates a new instance of MockRequest. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRequest(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRequest {
	mock := &MockRequest{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
