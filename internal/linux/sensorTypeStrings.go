// Code generated by "stringer -type=SensorTypeValue -output sensorTypeStrings.go -linecomment"; DO NOT EDIT.

package linux

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SensorUnknown-0]
	_ = x[SensorAppActive-1]
	_ = x[SensorAppRunning-2]
	_ = x[SensorBattType-3]
	_ = x[SensorBattPercentage-4]
	_ = x[SensorBattTemp-5]
	_ = x[SensorBattVoltage-6]
	_ = x[SensorBattEnergy-7]
	_ = x[SensorBattEnergyRate-8]
	_ = x[SensorBattState-9]
	_ = x[SensorBattNativePath-10]
	_ = x[SensorBattLevel-11]
	_ = x[SensorBattModel-12]
	_ = x[SensorMemoryStat-13]
	_ = x[SensorConnectionState-14]
	_ = x[SensorConnectionID-15]
	_ = x[SensorConnectionDevices-16]
	_ = x[SensorConnectionType-17]
	_ = x[SensorConnectionIPv4-18]
	_ = x[SensorConnectionIPv6-19]
	_ = x[SensorAddressIPv4-20]
	_ = x[SensorAddressIPv6-21]
	_ = x[SensorWifiSSID-22]
	_ = x[SensorWifiFrequency-23]
	_ = x[SensorWifiSpeed-24]
	_ = x[SensorWifiStrength-25]
	_ = x[SensorWifiHWAddress-26]
	_ = x[SensorBytesSent-27]
	_ = x[SensorBytesRecv-28]
	_ = x[SensorBytesSentRate-29]
	_ = x[SensorBytesRecvRate-30]
	_ = x[SensorPowerProfile-31]
	_ = x[SensorBoottime-32]
	_ = x[SensorUptime-33]
	_ = x[SensorLoad1-34]
	_ = x[SensorLoad5-35]
	_ = x[SensorLoad15-36]
	_ = x[SensorCPUPc-37]
	_ = x[SensorCPUCtxSwitch-38]
	_ = x[SensorProcCnt-39]
	_ = x[SensorProcsRunning-40]
	_ = x[SensorProcsBlocked-41]
	_ = x[SensorScreenLock-42]
	_ = x[SensorLidClosed-43]
	_ = x[SensorProblem-44]
	_ = x[SensorKernel-45]
	_ = x[SensorDistribution-46]
	_ = x[SensorVersion-47]
	_ = x[SensorUsers-48]
	_ = x[SensorDeviceTemp-49]
	_ = x[SensorPowerState-50]
	_ = x[SensorAccentColor-51]
	_ = x[SensorColorScheme-52]
	_ = x[SensorDiskReads-53]
	_ = x[SensorDiskWrites-54]
	_ = x[SensorDiskReadRate-55]
	_ = x[SensorDiskWriteRate-56]
	_ = x[SensorDocked-57]
	_ = x[SensorExternalPower-58]
	_ = x[SensorIdleState-59]
	_ = x[SensorCPUFreq-60]
}

const _SensorTypeValue_name = "Unknown SensorActive AppRunning AppsBattery TypeBattery LevelBattery TemperatureBattery VoltageBattery EnergyBattery PowerBattery StateBattery PathBattery LevelBattery ModelMemoryConnection StateConnection IDConnection DeviceConnection TypeConnection IPv4Connection IPv6IPv4 AddressIPv6 AddressWi-Fi SSIDWi-Fi FrequencyWi-Fi Link SpeedWi-Fi Signal StrengthWi-Fi BSSIDBytes SentBytes ReceivedBytes Sent ThroughputBytes Received ThroughputPower ProfileLast RebootUptimeCPU load average (1 min)CPU load average (5 min)CPU load average (15 min)CPU UsageTotal CPU Context SwitchesTotal Processes CreatedProcesses RunningProcesses BlockedScreen LockLid ClosedProblemsKernel VersionDistribution NameDistribution VersionCurrent UsersTemperaturePower StateAccent ColorColor Scheme TypeDisk ReadsDisk WritesDisk Read RateDisk Write RateDocked StateExternal Power ConnectedIdleCPU Frequency"

var _SensorTypeValue_index = [...]uint16{0, 14, 24, 36, 48, 61, 80, 95, 109, 122, 135, 147, 160, 173, 179, 195, 208, 225, 240, 255, 270, 282, 294, 304, 319, 335, 356, 367, 377, 391, 412, 437, 450, 461, 467, 491, 515, 540, 549, 575, 598, 615, 632, 643, 653, 661, 675, 692, 712, 725, 736, 747, 759, 776, 786, 797, 811, 826, 838, 862, 866, 879}

func (i SensorTypeValue) String() string {
	if i < 0 || i >= SensorTypeValue(len(_SensorTypeValue_index)-1) {
		return "SensorTypeValue(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SensorTypeValue_name[_SensorTypeValue_index[i]:_SensorTypeValue_index[i+1]]
}
