name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release_please:
    runs-on: ubuntu-latest
    steps:
      - name: Run release please
        uses: google-github-actions/release-please-action@v3
        id: release_please
        with:
          release-type: go
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout source
        uses: actions/checkout@v3
        if: ${{ steps.release_please.outputs.release_created }}
        with:
          fetch-depth: 0

      - name: Install/Cache dependencies
        if: ${{ steps.release_please.outputs.release_created }}
        id: cache_pkg_deps
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: desktop-file-utils gcc libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev libx11-dev xorg-dev

      - name: Setup Go
        if: ${{ steps.release_please.outputs.release_created }}
        id: setup_go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.21.5'        

      - name: Install Go dependencies
        if: ${{ steps.release_please.outputs.release_created }}
        id: install_go_deps
        run: |
          go install golang.org/x/tools/cmd/stringer@latest
          go install github.com/fyne-io/fyne-cross@latest
          go install golang.org/x/text/cmd/gotext@latest
          go install github.com/matryer/moq@latest

      - name: Update VERSION
        if: ${{ steps.release_please.outputs.release_created }}
        id: update_version
        shell: sh
        run: cd internal/agent/config && printf %s $(git tag | tail -1) > VERSION

      - name: install cosign
        id: install_cosign
        uses: sigstore/cosign-installer@v3.3.0
        with:
          cosign-release: 'v2.2.2'

      - name: Run Go Releaser
        uses: goreleaser/goreleaser-action@v5
        if: ${{ steps.release_please.outputs.release_created }}
        id: run_goreleaser
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_PWD: ${{ secrets.COSIGN_PWD }}