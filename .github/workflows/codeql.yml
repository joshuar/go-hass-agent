name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '38 13 * * 4'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: go
          build-mode: manual
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install build dependencies
      id: install_packages
      run: >
        sudo apt-get update && sudo apt-get -y install
        desktop-file-utils gcc
        libgl1-mesa-dev xserver-xorg-dev 
        libxcursor-dev libxrandr-dev
        libxinerama-dev libxi-dev
        libgl1-mesa-dev libxxf86vm-dev 
      env:
        DEBIAN_FRONTEND: noninteractive
    - name: Setup Go
      id: setup_go
      uses: actions/setup-go@v5
      with:
        go-version: '^1.22'
    - name: Install Go dependencies
      id: install_go_deps
      run: |
        go install golang.org/x/tools/cmd/stringer@latest
        go install golang.org/x/text/cmd/gotext@latest
        go install github.com/matryer/moq@latest
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        packs: githubsecuritylab/codeql-${{ matrix.language }}-queries        
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        go generate ./...
        go build
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
